syntax = "proto3";

package route;

option go_package = "/msg";

message Error {
  int32 code = 1;
  string errmsg = 2;
}

message ReqestMsgWrap {
  string msgname = 1;
  uint32 seqid = 2;
}

message ResponseMsgWrap {
  string msgname = 1;
  uint32 seqid = 2;
  Error err = 3;
}

message AsyncMsgWrap {
  string msgname = 1;
}

message OSInfo {
  string name = 1;
  string version = 2;
  string arch = 3;
}

message NetworkInfo {
  string name = 1;
}

message DriverInfo {
  string name = 1;
  string version = 2;
}

message ClientEnvInfo {
  OSInfo osinfo = 1;
  NetworkInfo network = 2;
}

message UserInfo {
  uint32 uid = 1;
  string uname = 2;
  string role = 3;
  repeated string groups = 4;
}

message Echo {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 99;
  }
  bytes body = 1;
}

message EchoRequest {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 104;
  }
  string msg = 1;
}

message EchoResponse {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 105;
  }
  string msg = 1;
}

message GroupBroadcastRequest {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 106;
  }
  string group = 1;

  uint32 msgid = 2;
  bytes msgdata = 3;
}

message GroupBroadcastResponse {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 107;
  }
  uint32 recv_count = 1;
}

message JoinGroupRequest {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 108;
  }
  repeated string groups = 1;
}

message JoinGroupResponse {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 109;
  }
  repeated string groups = 1;
}

message Page {
  uint32 start_at = 1;
  uint32 end_at = 2;
}

message ListGroupRequest {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 110;
  }
  Page page = 1;
}

message ListGroupResponse {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 111;
  }
  repeated string groups = 1;
  uint32 total = 2;
}

message CreateGroupRequest {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 112;
  }
  string group = 1;
  repeated uint32 invite = 2;
}

message CreateGroupResponse {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 113;
  }
  string group = 1;
}

message DeleteGroupRequest {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 114;
  }
  string group = 1;
}

message DeleteGroupResponse {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 115;
  }
  string group = 1;
}

message PutInGroupRequest {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 116;
  }
  string group = 1;
  repeated uint32 invite = 2;
}

message PutInGroupResponse {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 117;
  }
  enum ErrCode {
    ok = 0;
    unkown_err = 1;
    group_not_found = 2;
  }
  ErrCode errcode = 1;
  repeated uint32 invite = 2;
}

message ListGroupSessionRequest {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 118;
  }
  string group = 1;
  Page page = 2;
}

message ListGroupSessionResponse {
  enum MSGID {
    INVALID_MSGID = 0;
    ID = 119;
  }
  repeated UserInfo uinfos = 1;
  uint32 total = 2;
}

// events
message EventSessionStatChange {}
